우선 0부터 시작하는 이유는,
그 언어를 만든 사람들과 선배들이 그렇게 약속을 해놨기 때문입니다.
또 그러한 방법으로 했을때 편한 점과 장점이 있을겁니다,,

대부분의 언어에서 약속된 것으로는, 0~4까지라는 뜻은 0,1,2,3 을 의미합니다
즉 0<=i<4이며 [0,4) 라고 표시하기도 합니다

배열의 크기가 4라면
for(int i=0; i<=3; ++i)이렇게 사용하지 않고
대부분 for(int i=0; i<4; ++i) 이렇게 사용하는 이유도, 약속에 맞추기 위함입니다.

for(int i=0; i<=size-1; ++i) 보다는 for(int i=0; i<size; ++i)가 더 깔끔하다는 장점도 있습니다
또, 매번 i가 조건을 만족하는지 검사를 할때에도, i<size는 바로 검사하면 되지만
i<=size-1의 경우 size에 -1연산을 한후 검사하게 되므로, 예전의 컴퓨터 사양에서는 큰 손해였을것입니당.



배열의 경우 int arr[5]라면, arr가 가리키는 주소에, 첫 원소 arr[0]의 값을 저장하게 되는데
arr[0]은 arr가 가리키는 주소로부터 0만큼 떨어진 int라는 의미가 됩니다
따라서
arr[0] 은  *(arr+0)과 같고, arr[1] 은 *(arr+1)과 같습니다
arr는 주소를 저장하는 포인터 변수이므로, +1을 한다고 실제로 주소에 1이 더해지는 것이 아니라
배열에 선언된 자료형의 크기만큼 더해지게 됩니다
예를 들어, int가 32bit의 자리를 차지한다면 (arr+2)은 arr부터 32x2bit떨어진 곳으로 이동하게 됩니다
그래서, 연결리스트와 다르게 배열은, 어디에 위치하든 빠르게 접근할 수 있다는 장점이 있습니다.